# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
parameters:

services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.
        public: false

    http.store:
        class: Symfony\Component\HttpKernel\HttpCache\Store
        arguments:
            - '%kernel.project_dir%/var/http-cache'

    http.client.internal:
        class: Symfony\Contracts\HttpClient\HttpClientInterface
        factory: ['Symfony\Component\HttpClient\HttpClient', 'create']

    http.client:
        class: Symfony\Component\HttpClient\CachingHttpClient
        arguments:
            - '@http.client.internal'
            - '@http.store'

    Phpcq\RepositoryBuilder\Api\GithubClient:
        arguments:
          - '@http.client'
          - '@github.cache'
          - '%env(GITHUB_TOKEN)%'

    github.cache:
        class: Symfony\Component\Cache\Adapter\PhpFilesAdapter
        arguments:
            $namespace: 'github-'
            $directory: '%kernel.project_dir%/var/github-cache'

    Phpcq\RepositoryBuilder\Command\:
        resource: '../src/Command'
        tags: ['console.command']

    Phpcq\RepositoryBuilder\Command\RebuildCommand:
        arguments: [!tagged_locator { tag: 'repository.factory', index_by: 'key' }]
        tags: ['console.command']

    Phpcq\RepositoryBuilder\SourceProvider\PharIoRepositoryFactory:
        arguments:
            - '@http.client'
            - '%kernel.project_dir%/var/repositories/phar.io'
        tags:
            - { name: 'repository.factory', key: 'phar.io' }

    Phpcq\RepositoryBuilder\SourceProvider\Tool\Github\TagProviderRepositoryFactory:
        arguments:
            - '@Phpcq\RepositoryBuilder\Api\GithubClient'
        tags:
            - { name: 'repository.factory', key: 'github' }

    Phpcq\RepositoryBuilder\SourceProvider\PluginProviderRepositoryFactory:
        tags:
            - { name: 'repository.factory', key: 'plugin' }

    Phpcq\RepositoryBuilder\SourceProvider\Plugin\Github\RepositoryFactory:
        tags:
            - { name: 'repository.factory', key: 'github-plugin' }

    # controllers are imported separately to make sure services can be injected
    # as action arguments even if you don't extend any base controller class
    # Phpcq\RepositoryBuilder\Controller\:
    #     resource: '../src/Controller'
    #     tags: ['controller.service_arguments']

    # event subscribers are imported separately to add the tag.
    # Phpcq\RepositoryBuilder\EventSubscriber\:
    #     resource: '../src/EventSubscriber'
    #     tags: ['kernel.event_subscriber']

    # add more service definitions when explicit configuration is needed
    # please note that last definitions always *replace* previous ones
